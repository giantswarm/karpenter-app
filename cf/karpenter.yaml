AWSTemplateFormatVersion: "2010-09-09"
Description: Resources used by https://github.com/giantswarm/karpenter-app
Parameters:
  ClusterName:
    Type: String
    Description: "GS Cluster ID"
  IrsaDomain:
    Type: String
    Description: "IRSA Domain"
Resources:
  KarpenterNodeRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ClusterName}-Karpenter-Role"
      AssumeRolePolicyDocument: !Sub
        |
          {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${IrsaDomain}"
                    },
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                        "StringEquals": {
                            "${IrsaDomain}:sub": "system:serviceaccount:kube-system:karpenter"
                        }
                    }
                }
            ]
          }
  KarpenterControllerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles: 
        - Ref: "KarpenterNodeRole"
      PolicyName: !Sub "KarpenterControllerPolicy-${ClusterName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              # Write Operations
              - ec2:CreateFleet
              - ec2:CreateLaunchTemplate
              - ec2:CreateTags
              - ec2:DeleteLaunchTemplate
              - ec2:RunInstances
              - ec2:TerminateInstances
              # Read Operations
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypeOfferings
              - ec2:DescribeInstanceTypes
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSpotPriceHistory
              - ec2:DescribeSubnets
              - pricing:GetProducts
              - ssm:GetParameter
          - Effect: Allow
            Action:
              # Write Operations
              - sqs:DeleteMessage
              # Read Operations
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Resource: !GetAtt KarpenterInterruptionQueue.Arn
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/gs-cluster-${ClusterName}-role-*"
  KarpenterInterruptionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ClusterName}-termination-handler"
      MessageRetentionPeriod: 300
  KarpenterInterruptionQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref KarpenterInterruptionQueue
      PolicyDocument:
        Id: EC2InterruptionPolicy
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - sqs.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt KarpenterInterruptionQueue.Arn
  ScheduledChangeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.health
        detail-type:
          - AWS Health Event
      Targets:
        - Id: KarpenterInterruptionQueueTarget
          Arn: !GetAtt KarpenterInterruptionQueue.Arn
  SpotInterruptionRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Spot Instance Interruption Warning
      Targets:
        - Id: KarpenterInterruptionQueueTarget
          Arn: !GetAtt KarpenterInterruptionQueue.Arn
  RebalanceRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance Rebalance Recommendation
      Targets:
        - Id: KarpenterInterruptionQueueTarget
          Arn: !GetAtt KarpenterInterruptionQueue.Arn
  InstanceStateChangeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance State-change Notification
      Targets:
        - Id: KarpenterInterruptionQueueTarget
          Arn: !GetAtt KarpenterInterruptionQueue.Arn